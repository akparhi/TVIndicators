//@version=4
strategy("100Seconds Renko Strategy", overlay=true)

// CONSTANTS
colorBrightRed = #ff0080
colorMutedRed = #b8005d
colorBrightGreen = #00ff80
colorMutedGreen = #00b36b

//////////////////////////////////////////////////////////////////////////
// RF
//////////////////////////////////////////////////////////////////////////
rfperiod = input(defval=100, minval=1, title="RF Sampling Period")
mult = input(defval=3.0, minval=0.1, title="RF Multiplier")

// Smooth Average Range
smoothrng(x, t, m)=>
    wper      = (t*2) - 1
    avrng     = ema(abs(x - x[1]), t)
    ema(avrng, wper)*m

smrng = smoothrng(close, rfperiod, mult)

// Range Filter
rngfilt(x, r)=>
    rngfilt  = x
    rngfilt := x > nz(rngfilt[1]) ? ((x - r) < nz(rngfilt[1]) ? nz(rngfilt[1]) : (x - r)) : ((x + r) > nz(rngfilt[1]) ? nz(rngfilt[1]) : (x + r))
    rngfilt
filt = rngfilt(close, smrng)

// Filter Direction
upward   = 0.0
upward  := filt > filt[1] ? nz(upward[1]) + 1 : filt < filt[1] ? 0 : nz(upward[1])
downward = 0.0
downward := filt < filt[1] ? nz(downward[1]) + 1 : filt > filt[1] ? 0 : nz(downward[1])

// PLOT
filtcolor = upward > 0 ? color.blue : downward > 0 ? color.orange : color.gray
filtplot = plot(filt, color=filtcolor, linewidth=3, title="Range Filter")

alertcondition(filtcolor != filtcolor[1], "Filter color change", "Filter color change")
plot(tr)

//////////////////////////////////////////////////////////////////////////
// Supertrend
//////////////////////////////////////////////////////////////////////////
tf = input('15', type=input.resolution, title="HTF")
atrPeriod = input(title="ATR Period", type=input.integer, defval=10)
atrMultiplier = input(title="ATR Multiplier", type=input.float, step=0.1, defval=2.5)
showsignals = input(title="Show Buy/Sell Signals ?", type=input.bool, defval=false)
highlighting = input(title="Highlighter On/Off ?", type=input.bool, defval=true)
atr=atr(atrPeriod)
up=close - (atrMultiplier*atr)
up1 = nz(up[1],up)
up := close[1] > up1 ? max(up,up1) : up
dn=close + (atrMultiplier*atr)
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
upPlot = plot(trend == 1 ? up : na, title="Up Trend", style=plot.style_linebr, linewidth=2, color=color.green)
buySignal = trend == 1 and trend[1] == -1
plotshape(buySignal ? up : na, title="UpTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.green, transp=0)
plotshape(buySignal and showsignals ? up : na, title="Buy", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0)
dnPlot = plot(trend == 1 ? na : dn, title="Down Trend", style=plot.style_linebr, linewidth=2, color=color.red)
sellSignal = trend == -1 and trend[1] == 1
plotshape(sellSignal ? dn : na, title="DownTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.red, transp=0)
plotshape(sellSignal and showsignals ? dn : na, title="Sell", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white, transp=0)
mPlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)
longFillColor = highlighting ? (trend == 1 ? color.green : color.white) : color.white
shortFillColor = highlighting ? (trend == -1 ? color.red : color.white) : color.white
fill(mPlot, upPlot, title="UpTrend Highligter", color=longFillColor)
fill(mPlot, dnPlot, title="DownTrend Highligter", color=shortFillColor)


//////////////////////////////////////////////////////////////////////////
// Strategy
//////////////////////////////////////////////////////////////////////////
boxHeight = input(defval = 50.0, title = "Renko box height", minval = 0.0)
slMultiplier = input(defval = 3.6, title = "SL multiplier", minval = 0.0)

// longCondition = close[2] < filt[2] and close[1] > filt[1] and close > filt
// shortCondition = close[2] > filt[2] and close[1] < filt[1] and close < filt

longCondition = filtcolor[1] == color.orange and filtcolor == color.blue
shortCondition = filtcolor[1] == color.blue and filtcolor == color.orange


FromMonth = input(defval = 1, title = "From Month", minval = 1, maxval = 12)
FromDay   = input(defval = 1, title = "From Day", minval = 1, maxval = 31)
FromYear  = input(defval = 2021, title = "From Year", minval = 2018)
ToMonth   = input(defval = 1, title = "To Month", minval = 1, maxval = 12)
ToDay     = input(defval = 1, title = "To Day", minval = 1, maxval = 31)
ToYear    = input(defval = 9999, title = "To Year", minval = 999)
start     = timestamp(FromYear, FromMonth, FromDay, 00, 00)  
finish    = timestamp(ToYear, ToMonth, ToDay, 23, 59)       
window()  => time >= start and time <= finish ? true : false

if (longCondition)
    strategy.entry("Long", strategy.long, when = window())
if (shortCondition)
    strategy.entry("Sell", strategy.short, when = window())

buy1= barssince(buySignal)
sell1 = barssince(sellSignal)
